#!/usr/bin/python

from pathlib import Path

from extern.configobj import ConfigObj
from extern.configobj.validate import Validator

from const.common import TXT_NIL
from .debug import DBG, me_


class Action(ConfigObj):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

#TODO, use configspec and validate it against a Validator object
        self.vld = Validator()  # not used

        if not Path(self.filename).is_file():
            self.create()

        self.load()

    def default(self):
        DBG('ACT', f'{me_()}\n  File = {self.filename}\n')

        sec = 'Action'
        self[sec] = {}
        self[sec]['FIL_NEW'] = 'tlw.file_new'
        self[sec]['FIL_OPN'] = 'tlw.file_open'
        self[sec]['FIL_QOP'] = 'tlw.file_quick_open'
        self[sec]['FIL_RCF'] = 'tlw.file_reopen_closed_from_history'
        self[sec]['FIL_RCA'] = 'tlw.file_reopen_closed_from_history'
        self[sec]['FIL_CLI'] = 'tlw.file_clear_history'
        self[sec]['FIL_SAV'] = 'tlw.file_save'
        self[sec]['FIL_SAS'] = 'tlw.file_save_as'
        self[sec]['FIL_SVA'] = 'tlw.file_save_all'
        self[sec]['FIL_REN'] = 'tlw.file_rename'
        self[sec]['FIL_RVS'] = 'tlw.file_revert_to_saved'
        self[sec]['FIL_CHD'] = 'tlw.file_change_directory'
        self[sec]['FIL_CFD'] = 'tlw.file_change_to_file_directory'
        self[sec]['FIL_INS'] = 'tlw.file_insert_file'
        self[sec]['FIL_APD'] = 'tlw.file_append_file'
        self[sec]['FIL_WBL'] = 'tlw.file_write_block_to_file'
        self[sec]['FIL_NWN'] = 'tlw.file_new_window'
        self[sec]['FIL_CWN'] = 'tlw.file_new_window'
        self[sec]['FIL_CLS'] = 'tlw.file_close'
        self[sec]['FIL_CLA'] = 'tlw.file_close_all'
        self[sec]['FIL_CAE'] = 'tlw.file_close_other'
        self[sec]['FIL_XIT'] = 'tlw.file_exit'
        self[sec]['EDT_UDO'] = 'tlw.edit_undo'
        self[sec]['EDT_RDO'] = 'tlw.edit_redo'
        self[sec]['EDT_CUT'] = 'tlw.edit_clipboard'
        self[sec]['EDT_CPY'] = 'tlw.edit_clipboard'
        self[sec]['EDT_PST'] = 'tlw.edit_clipboard'
        self[sec]['EDT_DEL'] = 'tlw.edit_delete'
        self[sec]['EDT_CPF'] = 'tlw.edit_copy_filename'
        self[sec]['CRT_TOP'] = 'tlw.edit_move_caret_to'
        self[sec]['CRT_CTR'] = 'tlw.edit_move_caret_to'
        self[sec]['CRT_BOT'] = 'tlw.edit_move_caret_to'
        self[sec]['PAR_NXT'] = 'tlw.edit_goto_paragraph'
        self[sec]['PAR_PRV'] = 'tlw.edit_goto_paragraph'
        self[sec]['EDT_DPL'] = 'tlw.edit_duplicate_line'
        self[sec]['EDT_TPL'] = 'tlw.edit_transpose_line'
        self[sec]['LIN_TOP'] = 'tlw.edit_scroll_line_to'
        self[sec]['LIN_CTR'] = 'tlw.edit_scroll_line_to'
        self[sec]['LIN_BOT'] = 'tlw.edit_scroll_line_to'
        self[sec]['LIN_SLD'] = 'tlw.edit_move_selected_lines'
        self[sec]['LIN_SLU'] = 'tlw.edit_move_selected_lines'
        self[sec]['EDT_COL'] = 'tlw.edit_column_editor'
        self[sec]['EDT_CTP'] = 'tlw.edit_calltip'
        self[sec]['EDT_ACP'] = 'tlw.edit_autocomplete'
        self[sec]['EDT_XWD'] = 'not_implemented'
        self[sec]['SRT_LIN'] = 'tlw.edit_sort_lines'
        self[sec]['SRT_REV'] = 'tlw.edit_sort_lines'
        self[sec]['SRT_UNQ'] = 'tlw.edit_sort_lines'
        self[sec]['EDT_SUM'] = 'tlw.edit_calc_sum_of_text'
        self[sec]['SEL_SPL'] = 'tlw.select_split_into_lines'
        self[sec]['SEL_APL'] = 'tlw.select_add_line'
        self[sec]['SEL_ANL'] = 'tlw.select_add_line'
        self[sec]['SEL_SGL'] = 'not_implemented'
        self[sec]['SEL_INV'] = 'not_implemented'
        self[sec]['SEL_ALL'] = 'tlw.select_all'
        self[sec]['SEL_WRD'] = 'tlw.select_word'
        self[sec]['SEL_LIN'] = 'tlw.select_line'
        self[sec]['SEL_PAR'] = 'tlw.select_paragraph'
        self[sec]['SEL_BRC'] = 'tlw.select_braces'
        self[sec]['SEL_IND'] = 'tlw.select_indentation'
        self[sec]['SEL_SWP'] = 'tlw.select_anchor_caret_swap'
        self[sec]['SCH_FND'] = 'tlw.set_search_mode'
        self[sec]['SCH_RPL'] = 'tlw.set_search_mode'
        self[sec]['SCH_NXT'] = 'tlw.search_find_next'
        self[sec]['SCH_PRV'] = 'tlw.search_find_previous'
        self[sec]['SCH_CUN'] = 'tlw.search_find_current'
        self[sec]['SCH_CUP'] = 'tlw.search_find_current'
        self[sec]['SCH_CUA'] = 'tlw.search_find_current'
        self[sec]['SCH_FIF'] = 'tlw.set_search_mode'
        self[sec]['SCH_INC'] = 'tlw.set_search_mode'
        self[sec]['SCH_CAS'] = 'tlw.toggle_search_option'
        self[sec]['SCH_REG'] = 'tlw.toggle_search_option'
        self[sec]['SCH_WRD'] = 'tlw.toggle_search_option'
        self[sec]['SCH_WRP'] = 'tlw.toggle_search_option'
        self[sec]['SCH_ISL'] = 'tlw.toggle_search_option'
        self[sec]['SCH_HLM'] = 'tlw.toggle_search_option'
        self[sec]['SCH_PCS'] = 'tlw.toggle_search_option'
        self[sec]['SCH_CXT'] = 'tlw.toggle_search_option'
        self[sec]['SCH_BUF'] = 'tlw.toggle_search_option'
        self[sec]['SCH_RES'] = 'tlw.set_search_mode'
        self[sec]['CON_OUT'] = 'tlw.view_console_output'
        self[sec]['SPT_FLT'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_DLF'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_DOC'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_PRJ'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_BMK'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_LNG'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_FXP'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_SDF'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_MAC'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_TSK'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_BPT'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_DBG'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_DCM'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_CFG'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_ENV'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_HLP'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_PLT'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_PFL'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_PYS'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_VLT'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_MDN'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_CFW'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_DIA'] = 'tlw.view_side_panel_tool'
        self[sec]['SPT_SNP'] = 'tlw.view_side_panel_tool'
        self[sec]['DOC_WRP'] = 'tlw.view_word_wrap'
        self[sec]['DOC_EOL'] = 'tlw.view_eol_chars'
        self[sec]['DOC_WSP'] = 'tlw.view_whitespace_chars'
        self[sec]['IND_IUS'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW1'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW2'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW3'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW4'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW5'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW6'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW7'] = 'gui.CtxStatusBarIND'
# self[sec]['IND_TW8'] = 'gui.CtxStatusBarIND'
        self[sec]['IND_GSB'] = 'gui.CtxStatusBarIND'
        self[sec]['IND_ITS'] = 'gui.CtxStatusBarIND'
        self[sec]['IND_ITT'] = 'gui.CtxStatusBarIND'
        self[sec]['IND_GDS'] = 'tlw.view_indent_guides'
        self[sec]['SCL_NON'] = 'tlw.view_scroll_bars'
        self[sec]['SCL_BTH'] = 'tlw.view_scroll_bars'
        self[sec]['SCL_HOR'] = 'tlw.view_scroll_bars'
        self[sec]['SCL_VER'] = 'tlw.view_scroll_bars'
        self[sec]['AUT_SCL'] = 'tlw.view_auto_scroll'
        self[sec]['CRT_BRF'] = 'tlw.view_caret'
        self[sec]['CRT_LIN'] = 'tlw.view_caret'
        self[sec]['CRT_STK'] = 'tlw.view_caret'
        self[sec]['MGN_ALL'] = 'tlw.view_all_margins'
        self[sec]['MGN_NUM'] = 'tlw.view_margin'
        self[sec]['MGN_SYM'] = 'tlw.view_margin'
        self[sec]['MGN_FOL'] = 'tlw.view_margin'
        self[sec]['EDG_NON'] = 'tlw.view_edge'
        self[sec]['EDG_BCK'] = 'tlw.view_edge'
        self[sec]['EDG_LIN'] = 'tlw.view_edge'
        self[sec]['EDG_MUL'] = 'tlw.view_edge'
        self[sec]['EDG_COL'] = 'tlw.view_edge'
        self[sec]['EDG_CLR'] = 'tlw.view_edge'
        self[sec]['FOL_STY'] = 'tlw.view_folding_style'
        self[sec]['ZOO_RST'] = 'tlw.view_zoom'
        self[sec]['ZOO_IN_'] = 'tlw.view_zoom'
        self[sec]['ZOO_OUT'] = 'tlw.view_zoom'
        self[sec]['SRC_STA'] = 'tlw.view_statistics'
        self[sec]['DOC_LCK'] = 'tlw.view_read_only'
        self[sec]['WIN_TOP'] = 'tlw.view_on_top'
        self[sec]['GTO_ANY'] = 'tlw.goto_anything'
        self[sec]['GTO_SYM'] = 'tlw.symbol_browser'
        self[sec]['GTO_LIN'] = 'tlw.goto_line'
        self[sec]['JMP_BCK'] = 'tlw.goto_caret_pos'
        self[sec]['JMP_FWD'] = 'tlw.goto_caret_pos'
        self[sec]['GTO_OFL'] = 'tlw.list_open_files'
        self[sec]['GTO_TBM'] = 'tlw.toggle_bookmark'
        self[sec]['BMK_NXT'] = 'tlw.goto_bookmark'
        self[sec]['BMK_PRV'] = 'tlw.goto_bookmark'
        self[sec]['BMK_JB1'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB2'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB3'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB4'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB5'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB6'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB7'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB8'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB9'] = 'tlw.jump_to_bookmark'
        self[sec]['BMK_JB0'] = 'tlw.jump_to_bookmark'
        self[sec]['GTO_TTK'] = 'not_implemented'
        self[sec]['TSK_NXT'] = 'tlw.goto_task'
        self[sec]['TSK_PRV'] = 'tlw.goto_task'
        self[sec]['MCH_BRC'] = 'tlw.do_brace_match'
        self[sec]['RUN_MOD'] = 'tlw.run_module'
        self[sec]['RUN_DBM'] = 'tlw.start_debugger'
        self[sec]['RUN_TBP'] = 'tlw.toggle_breakpoint'
        self[sec]['BPT_ENA'] = 'tlw.enable_breakpoint'
        self[sec]['BPT_NXT'] = 'tlw.goto_breakpoint'
        self[sec]['BPT_PRV'] = 'tlw.goto_breakpoint'
# self[sec]['LNG_BASH'] = 'tlw.update_styling'
# self[sec]['LNG_BATCH'] = 'tlw.update_styling'
# self[sec]['LNG_CONF'] = 'tlw.update_styling'
# self[sec]['LNG_CPP'] = 'tlw.update_styling'
# self[sec]['LNG_CSS'] = 'tlw.update_styling'
# self[sec]['LNG_HTML'] = 'tlw.update_styling'
# self[sec]['LNG_MARKDOWN'] = 'tlw.update_styling'
# self[sec]['LNG_PASCAL'] = 'tlw.update_styling'
# self[sec]['LNG_PERL'] = 'tlw.update_styling'
# self[sec]['LNG_PHPSCRIPT'] = 'tlw.update_styling'
# self[sec]['LNG_POWERSHELL'] = 'tlw.update_styling'
# self[sec]['LNG_PROPERTIES'] = 'tlw.update_styling'
# self[sec]['LNG_PYTHON'] = 'tlw.update_styling'
# self[sec]['LNG_RUBY'] = 'tlw.update_styling'
# self[sec]['LNG_SQL'] = 'tlw.update_styling'
# self[sec]['LNG_TCL'] = 'tlw.update_styling'
# self[sec]['LNG_XML'] = 'tlw.update_styling'
# self[sec]['LNG_YAML'] = 'tlw.update_styling'
# self[sec]['LNG_NULL'] = 'tlw.update_styling'
        self[sec]['PRJ_NEW'] = 'tlw.project_new'
        self[sec]['PRJ_OPN'] = 'tlw.project_open'
        self[sec]['PRJ_CLS'] = 'tlw.project_close'
        self[sec]['PRJ_OPA'] = 'tlw.project_open_all_files'
        self[sec]['PRJ_CLA'] = 'tlw.project_close_all_files'
        self[sec]['PRJ_FIL'] = 'tlw.project_files'
        self[sec]['PRJ_RPH'] = 'tlw.project_recent_projects'
        self[sec]['PRJ_MFL'] = 'tlw.project_manage_file_list'
        self[sec]['FMT_TTL'] = 'tlw.format_case'
        self[sec]['FMT_UPR'] = 'tlw.format_case'
        self[sec]['FMT_LWR'] = 'tlw.format_case'
        self[sec]['FMT_INV'] = 'tlw.format_case'
        self[sec]['FMT_PAR'] = 'not_implemented'
        self[sec]['FMT_FLB'] = 'not_implemented'
        self[sec]['FMT_ITP'] = 'not_implemented'
        self[sec]['FMT_CMT'] = 'tlw.format_comment'
        self[sec]['FMT_ITM'] = 'tlw.insert_timestamp'
        self[sec]['FMT_ECL'] = 'tlw.convert_eol'
        self[sec]['FMT_ELF'] = 'tlw.convert_eol'
        self[sec]['FMT_ECR'] = 'tlw.convert_eol'
        self[sec]['FMT_EMX'] = 'not_implemented'
        self[sec]['FMT_UNI'] = 'not_implemented'
        self[sec]['FMT_CST'] = 'not_implemented'
        self[sec]['FMT_CTS'] = 'not_implemented'
        self[sec]['FMT_RMC'] = 'not_implemented'
        self[sec]['FMT_RMT'] = 'tlw.remove_trailing_whitespace'
        self[sec]['MAC_TST'] = 'tlw.macro_TEST'
        self[sec]['MAC_QRC'] = 'tlw.macro_start'
        self[sec]['MAC_REC'] = 'tlw.macro_start'
        self[sec]['MAC_STP'] = 'tlw.macro_stop'
        self[sec]['MAC_PLY'] = 'tlw.macro_play'
        self[sec]['MAC_PLM'] = 'tlw.macro_play'
        self[sec]['MAC_LOD'] = 'not_implemented'
        self[sec]['MAC_SAV'] = 'not_implemented'
        self[sec]['MAC_EDT'] = 'tlw.macro_edit'
        self[sec]['MAC_xx1'] = 'not_implemented'
        self[sec]['MAC_xx2'] = 'not_implemented'
        self[sec]['MAC_xx3'] = 'not_implemented'
        self[sec]['MAC_xx4'] = 'not_implemented'
        self[sec]['LAY_CAP'] = 'tlw.toggle_caption'
        self[sec]['LAY_MBR'] = 'tlw.toggle_menubar'
        self[sec]['LAY_TBR'] = 'tlw.toggle_toolbar'
        self[sec]['LAY_IBR'] = 'not_implemented'
        self[sec]['LAY_SBR'] = 'tlw.toggle_statusbar'
        self[sec]['LAY_TTP'] = 'tlw.toggle_tooltips'
        self[sec]['LAY_MIC'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_MIK'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_I16'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_I24'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_I32'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_MHT'] = 'tlw.toggle_menu_item'
        self[sec]['LAY_SCH'] = 'lambda e: tlw.toggle_panel(e, "SCH", -1)'
        self[sec]['LAY_SCS'] = 'lambda e: tlw.swap_panel(e, "SCH", None)'
        self[sec]['LAY_RLR'] = 'lambda e: tlw.toggle_panel(e, "RLR", 1)'
        self[sec]['LAY_RLS'] = 'lambda e: tlw.swap_panel(e, "RLR", None)'
        self[sec]['LAY_SPN'] = 'lambda e: tlw.toggle_panel(e, "SPN", -1)'
        self[sec]['LAY_SPS'] = 'lambda e: tlw.swap_panel(e, "SPN", -1)'
        self[sec]['LAY_SPR'] = 'tlw.reset_side_panel'
        self[sec]['LAY_CCX'] = 'lambda e: tlw.toggle_panel(e, "CCX", 1)'
        self[sec]['LAY_CCS'] = 'lambda e: tlw.swap_panel(e, "CCX", -1)'
        self[sec]['LAY_PTB'] = 'tlw.toggle_page_tabs'
        self[sec]['LAY_PTT'] = 'tlw.toggle_page_tab_theme'
        self[sec]['LAY_PTI'] = 'tlw.toggle_page_tab_icons'
        self[sec]['LAY_ACP'] = 'tlw.toggle_autocomplete'
        self[sec]['LAY_CTP'] = 'tlw.toggle_calltips'
        self[sec]['LAY_TLT'] = 'tlw.toggle_topline_tooltip'
        self[sec]['LAY_CTT'] = 'tlw.toggle_colour_tooltip'
        self[sec]['LAY_SPU'] = 'tlw.toggle_symbol_popup'
        self[sec]['LAY_FUL'] = 'tlw.toggle_fullscreen'
        self[sec]['LAY_DFM'] = 'tlw.toggle_distraction_free'
        self[sec]['LAY_PRF'] = 'tlw.show_preferences'
        self[sec]['LAY_MNE'] = 'tlw.show_menu_editor'
        self[sec]['LAY_SYN'] = 'tlw.show_syntax_styling'
        self[sec]['LAY_KBD'] = 'tlw.show_shortcut_editor'
        self[sec]['HLP_CON'] = 'tlw.help_contents'
        self[sec]['HLP_CTX'] = 'tlw.help_context'
        self[sec]['HLP_UPD'] = 'tlw.help_check_updates'
        self[sec]['HLP_WIT'] = 'tlw.help_inspection_tool'
        self[sec]['HLP_ABT'] = 'tlw.help_about'

    def create(self):
        DBG('ACT', f'{me_()}\n  File = {self.filename}\n')

        # get default action configuration
        self.default()

        # add blank lines and header before all sections, except the first
        first_sec = 'Action'
        for sec in self:
            if sec != first_sec:
                for i in range(2):
                    self.comments[sec].insert(i, TXT_NIL)
            self.comments[sec].insert(2, 'Comment header for %s' % sec)

        self.save()

#FIX, not used: obsolete?
    def load(self):
        DBG('ACT', f'{me_()}\n  File = {self.filename}\n')

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        # for sec in self:
        #     print(sec)
        #     for key in self[sec]:
        #         print(' ', key, self[sec][key])
        #     print()
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#FIX, not used: obsolete?
    def save(self):
        DBG('ACT', f'{me_()}\n  File = {self.filename}\n')

        self.write()
